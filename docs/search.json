[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/서울시 공공체육시설 문제 분석및 해결방안/Final_Exam.html",
    "href": "posts/서울시 공공체육시설 문제 분석및 해결방안/Final_Exam.html",
    "title": "Jung_coding",
    "section": "",
    "text": "“Datamining Final Exam project”\n\n문제점\n최근 생활체육인구수가 증가하고있는 추세인반면 인구 증가 대비 적은 공공체육시설의 갯수와 기존 공공체육시설의 노후화가 문제점으로 파악. 추가적으로 서울시 내 구별 체육시설 불균형도 심각한 수준.\n\n\n“문제및 해결방법 분석순서”\n\n서울시 구별 인구수 및 공공체육시설 현황 파악\n구별 체육시설당 이용인구비율 파악을 통한 가장 심각한 구 3곳 선별\n해당 구의 공공체육시설 입지선정 방안\n\n접근성 : 대중교통을 이용한 접근성\n지가 : 해당 지역의 공시지가\n\n대중교통(지하철역)이 존재하는 동 선별\n선별된 동 중 공시지가가 낮은 순으로 선발\n각 구별 3개의 동 선별\n\n\n\n“문제점 분석”\n\nimport pandas as pd\nimport numpy as np\nimport geopandas as gpd\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\nimport matplotlib.pyplot as plt\nfrom shapely.geometry import Point, Polygon, LineString\nimport json\nfrom folium.features import GeoJson\nfrom shapely.geometry import Polygon\n\n\n# 데이터 파일 불러오기\n강남 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/강남구_예약현황.csv\", encoding='utf-8')\n강동 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/강동구_예약현황.csv\", encoding='utf-8')\n강서 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/강서구_예약현황.csv\", encoding='utf-8')\n광진 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/광진구_예약현황.csv\", encoding='utf-8')\n구로 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/구로구_예약현황.csv\", encoding='utf-8')\n동대문 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/동대문구_예약현황.csv\", encoding='utf-8')\n동작 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/동작구_예약현황.csv\", encoding='utf-8')\n마포 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/마포구_예약현황.csv\", encoding='utf-8')\n서초 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/서초구_예약현황.csv\", encoding='utf-8')\n성동 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/성동구_예약현황.csv\", encoding='utf-8')\n성북 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/성북구_예약현황.csv\", encoding='utf-8')\n송파 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/송파구_예약현황.csv\", encoding='utf-8')\n양천 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/양천구_예약현황.csv\", encoding='utf-8')\n영등포 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/영등포구_예약현황.csv\", encoding='utf-8')\n용산 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/용산구_예약현황.csv\", encoding='utf-8')\n종로 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/종로구_예약현황.csv\", encoding='utf-8')\n중구 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/1차 편집완료/중구_예약현황.csv\", encoding='utf-8')\n서울시_인구  =  pd.read_csv('/Users/chojs/Desktop/data_mining_project2/서울시_인구.csv')\n서울시_예약현황_통합  =  pd.read_csv('/Users/chojs/Desktop/data_mining_project2/서울시_예약현황_통합.csv')\n서울시_행정구역 = gpd.read_file(\"/Users/chojs/Desktop/data_mining_project2/LARD_ADM_SECT_SGG_11.shp\", encoding = 'CP949')\n서울시_공시지가 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/공시지가_2023년.csv\", encoding = 'CP949')\n서울시_읍면동_행정구역데이터 = gpd.read_file(\"/Users/chojs/Desktop/data_mining_project2/서울시_읍면동행정구역/LSMD_ADM_SECT_UMD_11.shp\",encoding = \"CP949\")\n\n\n/var/folders/jm/p7tw90mn0m9c_dsbyjy_sxq40000gn/T/ipykernel_3342/2190577029.py:22: DtypeWarning: Columns (3,9) have mixed types. Specify dtype option on import or set low_memory=False.\n  서울시_공시지가 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/공시지가_2023년.csv\", encoding = 'CP949')\n\n\n\n# 서울시 시군구 이름과 인구수가있는 csv파일\n서울시_인구\n\n\n\n\n\n  \n    \n      \n      SGG_NM\n      인구수\n    \n  \n  \n    \n      0\n      강동구\n      464027\n    \n    \n      1\n      송파구\n      663704\n    \n    \n      2\n      강남구\n      537817\n    \n    \n      3\n      서초구\n      408979\n    \n    \n      4\n      관악구\n      502628\n    \n    \n      5\n      동작구\n      390377\n    \n    \n      6\n      영등포구\n      398999\n    \n    \n      7\n      금천구\n      242467\n    \n    \n      8\n      구로구\n      417983\n    \n    \n      9\n      강서구\n      573711\n    \n    \n      10\n      양천구\n      442345\n    \n    \n      11\n      마포구\n      376542\n    \n    \n      12\n      서대문구\n      321966\n    \n    \n      13\n      은평구\n      468766\n    \n    \n      14\n      노원구\n      506989\n    \n    \n      15\n      도봉구\n      312858\n    \n    \n      16\n      강북구\n      296934\n    \n    \n      17\n      성북구\n      441855\n    \n    \n      18\n      중랑구\n      389928\n    \n    \n      19\n      동대문구\n      354884\n    \n    \n      20\n      광진구\n      350925\n    \n    \n      21\n      성동구\n      287240\n    \n    \n      22\n      용산구\n      232482\n    \n    \n      23\n      중구\n      131390\n    \n    \n      24\n      종로구\n      152212\n    \n  \n\n\n\n\n\n#서울시 구별정보와 행정구역 데이터가 polygon형태로 존재하는 shp파일\n서울시_행정구역\n\n\n\n\n\n  \n    \n      \n      ADM_SECT_C\n      SGG_NM\n      SGG_OID\n      COL_ADM_SE\n      GID\n      geometry\n    \n  \n  \n    \n      0\n      11740\n      강동구\n      NaN\n      11740\n      125\n      POLYGON ((971595.075 1952405.815, 971596.036 1...\n    \n    \n      1\n      11710\n      송파구\n      NaN\n      11710\n      126\n      POLYGON ((965821.957 1949386.153, 965816.737 1...\n    \n    \n      2\n      11680\n      강남구\n      NaN\n      11680\n      127\n      POLYGON ((959331.597 1948602.068, 959342.021 1...\n    \n    \n      3\n      11650\n      서초구\n      NaN\n      11650\n      128\n      POLYGON ((956982.039 1947144.037, 956982.518 1...\n    \n    \n      4\n      11620\n      관악구\n      NaN\n      11620\n      129\n      POLYGON ((949438.997 1944127.713, 949456.647 1...\n    \n    \n      5\n      11590\n      동작구\n      NaN\n      11590\n      130\n      POLYGON ((951811.770 1946444.671, 951885.519 1...\n    \n    \n      6\n      11560\n      영등포구\n      NaN\n      11560\n      131\n      POLYGON ((945280.001 1950949.319, 945361.246 1...\n    \n    \n      7\n      11545\n      금천구\n      NaN\n      11545\n      132\n      POLYGON ((944705.924 1943086.537, 944706.472 1...\n    \n    \n      8\n      11530\n      구로구\n      NaN\n      11530\n      133\n      POLYGON ((945165.294 1946679.190, 945362.702 1...\n    \n    \n      9\n      11500\n      강서구\n      NaN\n      11500\n      134\n      POLYGON ((939006.015 1955916.461, 939036.124 1...\n    \n    \n      10\n      11470\n      양천구\n      NaN\n      11470\n      135\n      POLYGON ((944706.568 1949917.649, 944717.625 1...\n    \n    \n      11\n      11440\n      마포구\n      NaN\n      11440\n      136\n      POLYGON ((946043.982 1954091.886, 946130.912 1...\n    \n    \n      12\n      11410\n      서대문구\n      NaN\n      11410\n      137\n      POLYGON ((951688.107 1956065.481, 951687.602 1...\n    \n    \n      13\n      11380\n      은평구\n      NaN\n      11380\n      138\n      POLYGON ((951637.438 1961851.784, 951649.915 1...\n    \n    \n      14\n      11350\n      노원구\n      NaN\n      11350\n      139\n      POLYGON ((965666.474 1959953.152, 965671.165 1...\n    \n    \n      15\n      11320\n      도봉구\n      NaN\n      11320\n      140\n      POLYGON ((957223.835 1961199.545, 957195.758 1...\n    \n    \n      16\n      11305\n      강북구\n      NaN\n      11305\n      141\n      POLYGON ((956316.789 1965175.345, 956401.551 1...\n    \n    \n      17\n      11290\n      성북구\n      NaN\n      11290\n      142\n      POLYGON ((956787.318 1953542.506, 956761.258 1...\n    \n    \n      18\n      11260\n      중랑구\n      NaN\n      11260\n      143\n      POLYGON ((965698.531 1957987.355, 965772.290 1...\n    \n    \n      19\n      11230\n      동대문구\n      NaN\n      11230\n      144\n      POLYGON ((962141.919 1956519.461, 962149.853 1...\n    \n    \n      20\n      11215\n      광진구\n      NaN\n      11215\n      145\n      POLYGON ((964825.058 1952633.250, 964875.565 1...\n    \n    \n      21\n      11200\n      성동구\n      NaN\n      11200\n      146\n      POLYGON ((959681.109 1952649.605, 959842.412 1...\n    \n    \n      22\n      11170\n      용산구\n      NaN\n      11170\n      147\n      POLYGON ((953115.761 1950834.084, 953114.206 1...\n    \n    \n      23\n      11140\n      중구\n      NaN\n      11140\n      148\n      POLYGON ((957890.386 1952616.746, 957909.908 1...\n    \n    \n      24\n      11110\n      종로구\n      NaN\n      11110\n      149\n      POLYGON ((956615.453 1953567.199, 956621.579 1...\n    \n  \n\n\n\n\n\n# 서울시_행정구역 데이터 프레임에 '인구수'라는 열을 서울시_인구수의 '인구수'열에서 가져와서 추가\n서울시_행정구역['인구수'] = 서울시_인구['인구수']\n서울시_행정구역\n\n\n\n\n\n  \n    \n      \n      ADM_SECT_C\n      SGG_NM\n      SGG_OID\n      COL_ADM_SE\n      GID\n      geometry\n      인구수\n    \n  \n  \n    \n      0\n      11740\n      강동구\n      NaN\n      11740\n      125\n      POLYGON ((971595.075 1952405.815, 971596.036 1...\n      464027\n    \n    \n      1\n      11710\n      송파구\n      NaN\n      11710\n      126\n      POLYGON ((965821.957 1949386.153, 965816.737 1...\n      663704\n    \n    \n      2\n      11680\n      강남구\n      NaN\n      11680\n      127\n      POLYGON ((959331.597 1948602.068, 959342.021 1...\n      537817\n    \n    \n      3\n      11650\n      서초구\n      NaN\n      11650\n      128\n      POLYGON ((956982.039 1947144.037, 956982.518 1...\n      408979\n    \n    \n      4\n      11620\n      관악구\n      NaN\n      11620\n      129\n      POLYGON ((949438.997 1944127.713, 949456.647 1...\n      502628\n    \n    \n      5\n      11590\n      동작구\n      NaN\n      11590\n      130\n      POLYGON ((951811.770 1946444.671, 951885.519 1...\n      390377\n    \n    \n      6\n      11560\n      영등포구\n      NaN\n      11560\n      131\n      POLYGON ((945280.001 1950949.319, 945361.246 1...\n      398999\n    \n    \n      7\n      11545\n      금천구\n      NaN\n      11545\n      132\n      POLYGON ((944705.924 1943086.537, 944706.472 1...\n      242467\n    \n    \n      8\n      11530\n      구로구\n      NaN\n      11530\n      133\n      POLYGON ((945165.294 1946679.190, 945362.702 1...\n      417983\n    \n    \n      9\n      11500\n      강서구\n      NaN\n      11500\n      134\n      POLYGON ((939006.015 1955916.461, 939036.124 1...\n      573711\n    \n    \n      10\n      11470\n      양천구\n      NaN\n      11470\n      135\n      POLYGON ((944706.568 1949917.649, 944717.625 1...\n      442345\n    \n    \n      11\n      11440\n      마포구\n      NaN\n      11440\n      136\n      POLYGON ((946043.982 1954091.886, 946130.912 1...\n      376542\n    \n    \n      12\n      11410\n      서대문구\n      NaN\n      11410\n      137\n      POLYGON ((951688.107 1956065.481, 951687.602 1...\n      321966\n    \n    \n      13\n      11380\n      은평구\n      NaN\n      11380\n      138\n      POLYGON ((951637.438 1961851.784, 951649.915 1...\n      468766\n    \n    \n      14\n      11350\n      노원구\n      NaN\n      11350\n      139\n      POLYGON ((965666.474 1959953.152, 965671.165 1...\n      506989\n    \n    \n      15\n      11320\n      도봉구\n      NaN\n      11320\n      140\n      POLYGON ((957223.835 1961199.545, 957195.758 1...\n      312858\n    \n    \n      16\n      11305\n      강북구\n      NaN\n      11305\n      141\n      POLYGON ((956316.789 1965175.345, 956401.551 1...\n      296934\n    \n    \n      17\n      11290\n      성북구\n      NaN\n      11290\n      142\n      POLYGON ((956787.318 1953542.506, 956761.258 1...\n      441855\n    \n    \n      18\n      11260\n      중랑구\n      NaN\n      11260\n      143\n      POLYGON ((965698.531 1957987.355, 965772.290 1...\n      389928\n    \n    \n      19\n      11230\n      동대문구\n      NaN\n      11230\n      144\n      POLYGON ((962141.919 1956519.461, 962149.853 1...\n      354884\n    \n    \n      20\n      11215\n      광진구\n      NaN\n      11215\n      145\n      POLYGON ((964825.058 1952633.250, 964875.565 1...\n      350925\n    \n    \n      21\n      11200\n      성동구\n      NaN\n      11200\n      146\n      POLYGON ((959681.109 1952649.605, 959842.412 1...\n      287240\n    \n    \n      22\n      11170\n      용산구\n      NaN\n      11170\n      147\n      POLYGON ((953115.761 1950834.084, 953114.206 1...\n      232482\n    \n    \n      23\n      11140\n      중구\n      NaN\n      11140\n      148\n      POLYGON ((957890.386 1952616.746, 957909.908 1...\n      131390\n    \n    \n      24\n      11110\n      종로구\n      NaN\n      11110\n      149\n      POLYGON ((956615.453 1953567.199, 956621.579 1...\n      152212\n    \n  \n\n\n\n\n\n#서울시_행정구역에 '인구수'데이터가 정확히 추가되었는지 확인\n서울시_행정구역.columns\n\nIndex(['ADM_SECT_C', 'SGG_NM', 'SGG_OID', 'COL_ADM_SE', 'GID', 'geometry',\n       '인구수'],\n      dtype='object')\n\n\n\n#서울시 공공체육시설 리스트\n서울시_예약현황_통합\n\n\n\n\n\n  \n    \n      \n      대분류명\n      소분류명\n      서비스상태\n      서비스명\n      결제방법\n      장소명\n      서비스대상\n      longitude\n      latitude\n    \n  \n  \n    \n      0\n      체육시설\n      테니스장\n      접수중\n      탄천센터 테니스장 1면(일원1,개포3동 주민 대상)\n      무료\n      서울물재생시설공단>탄천물재생센터\n      제한없음\n      127.079371\n      37.496831\n    \n    \n      1\n      체육시설\n      테니스장\n      접수중\n      탄천센터 테니스장 2면(일원1,개포3동 주민 대상)\n      무료\n      서울물재생시설공단>탄천물재생센터\n      제한없음\n      127.079371\n      37.496831\n    \n    \n      2\n      체육시설\n      족구장\n      접수중\n      에코파크 족구장 1면\n      무료\n      에코파크\n      제한없음\n      127.088178\n      37.495188\n    \n    \n      3\n      체육시설\n      풋살장\n      접수중\n      에코파크 풋살장\n      무료\n      에코파크\n      제한없음\n      127.088178\n      37.495188\n    \n    \n      4\n      체육시설\n      족구장\n      접수중\n      에코파크 족구장 2면\n      무료\n      에코파크\n      제한없음\n      127.088178\n      37.495188\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      644\n      체육시설\n      테니스장\n      예약마감\n      6월 장충 테니스장 5번코트 (주말)\n      유료\n      장충테니스장\n      제한없음\n      127.001672\n      37.554006\n    \n    \n      645\n      체육시설\n      테니스장\n      예약마감\n      6월 장충 테니스장 6번코트 (주말)\n      유료\n      장충테니스장\n      제한없음\n      127.001672\n      37.554006\n    \n    \n      646\n      체육시설\n      테니스장\n      예약마감\n      6월 장충 테니스장 7번코트 (주말)\n      유료\n      장충테니스장\n      제한없음\n      127.001672\n      37.554006\n    \n    \n      647\n      체육시설\n      테니스장\n      예약마감\n      6월 장충 테니스장 8번코트 (주말)\n      유료\n      장충테니스장\n      제한없음\n      127.001672\n      37.554006\n    \n    \n      648\n      체육시설\n      테니스장\n      예약마감\n      6월 장충 테니스장 9번코트 (주말)\n      유료\n      장충테니스장\n      제한없음\n      127.001672\n      37.554006\n    \n  \n\n649 rows × 9 columns\n\n\n\n\n#서울시를 중심으로 하고있는 Folium map 생성\n\nseoul_map = folium.Map(location=[37.5665, 126.9780], \n                 zoom_start=11, control_scale=True)\nseoul_map\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n# seoul map에 각 구별 인구수에 따른 색갈로 표시하기 위한 함수 생성\ndef field_type_colour(feature):\n    population = feature['properties']['인구수']\n    max_population = max(서울시_행정구역['인구수'])\n    min_population = min(서울시_행정구역['인구수'])\n    brightness = int((max_population-population) / (max_population - min_population) * 255)\n    color = (0,brightness,0)  \n    return '#{:02x}{:02x}{:02x}'.format(*color)\n\n\n# seoul_map에 Tooltip추가\nfolium.GeoJson(서울시_행정구역,\n               tooltip=folium.GeoJsonTooltip(fields=['SGG_NM',\n                                                     '인구수']),\n                style_function= lambda feature: {'fillColor':field_type_colour(feature), \n                                                 'fillOpacity':0.9, 'color': 'white','weight':1}).add_to(seoul_map)\n\nseoul_map\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n# 서울시 구별 공공체육시설 위치를 MakerCluster를 이용해 제작\n\n서울시_예약현황_통합 = 서울시_예약현황_통합.rename(columns={'장소X좌표' : 'longitude', '장소Y좌표' : 'latitude'})\n\n# MarkerCluster 생성\nmarker_cluster = MarkerCluster().add_to(seoul_map)\n\n# 데이터프레임의 각 행을 반복하면서 마커를 추가\nfor index, row in 서울시_예약현황_통합.iterrows():\n    location = (row['latitude'], row['longitude'])\n    folium.Marker(location=location, popup=row['장소명']).add_to(marker_cluster)\n\nseoul_map\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n# 서울시 인구수 및 체육시설수의 각각 의 barplot\n\n#서울시 구별 인구 그래프\n\n# 폰트 설정\nplt.rc('font', family='AppleGothic')\nplt.rcParams['axes.unicode_minus'] = False\n\n# 그래프 그리기\nax = 서울시_인구.plot.barh()\n\n# Y축의 이름 설정\nax.set_yticklabels(서울시_인구['SGG_NM'])\n\n\n# x축의 이름 추가\nax.set_xlabel('인구수')\n\n# 그래프의 제목 추가\nax.set_title('서울시 구별 인구 그래프')\n\n# 그래프 출력\nplt.show()\n\n\n\n\n\n#서울시 구별 체육시설 수 그래프\n\n#인구수 데이터에 구별 공공체육시설 갯수를 열을 새로 만들어서 추가\n\ndf = {'SGG_NM' : ['강동구','송파구','강남구','서초구','관악구','동작구','영등포구','금천구','구로구','강서구','양천구','마포구','서대문구','은평구','노원구','도봉구','강북구','성북구','중랑구','동대문구','광진구','성동구','용산구','중구','종로구'],\n              '체육시설갯수' : [52,60,14,82,0,53,11,0,57,35,15,46,0,0,0,0,0,54,0,6,44,29,42,37,12]}\n서울시_구별_체육시설갯수 = pd.DataFrame(df)\n서울시_인구['체육시설갯수'] = 서울시_구별_체육시설갯수['체육시설갯수']\n서울시_인구\n\n# 폰트 설정\nplt.rc('font', family='AppleGothic')\nplt.rcParams['axes.unicode_minus'] = False\n\n# 그래프 그리기\nax = 서울시_인구['체육시설갯수'].plot.barh()\n\n# Y축의 이름 설정\nax.set_yticklabels(서울시_인구['SGG_NM'])\n\n\n# x축의 이름 추가\nax.set_xlabel('체육시설수')\n\n# 그래프의 제목 추가\nax.set_title('서울시 구별 체육시설수')\n\n# 그래프 출력\nplt.show()\n\n\n\n\n\n# 서울시 구별 체육시설 개당 이용인구수 비율\n\n# 서울시_인구 데이터 프레임에 '비율'이라는 열을 새로 만들고 numpy를 이용해서 인구수를 체육시설수로 나눠줌\n서울시_인구['비율'] = np.divide(서울시_인구['인구수'], 서울시_인구['체육시설갯수'])\n\n#서울시 구별 체육시설 1개당 이용자 수 비율\n\n# 폰트 설정\nplt.rc('font', family='AppleGothic')\nplt.rcParams['axes.unicode_minus'] = False\n\n# 그래프 그리기\nax = 서울시_인구['비율'].plot.barh()\n\n# Y축의 이름 설정\nax.set_yticklabels(서울시_인구['SGG_NM'])\n\n\n# x축의 이름 추가\nax.set_xlabel('이용자수')\n\n# 그래프의 제목 추가\nax.set_title('서울시 구별 체육시설 1개당 이용인구수 비율')\n\n# 그래프 출력\nplt.show()\n\n\n\n\n위의 지도와 그래프를 통해서 인구수와 공공체육시설의 갯수가 비레하지 않다는 것을 알 수 있고 서울시 25개의 구중에 8개의구(중랑, 강북, 도봉, 노원, 은평, 서대문, 금천, 관악)는 공공체육시설이 존재하지 않으며 공공체육시설 1개당 이용인구 비율을 보면 동대문구, 강남구, 영등포구순으로 심각함을 나타내고 있음을 알 수 있다.\n\n\n공공체육시설 입지선정 우선순위\n\n접근성\n\n대중교통(지하철)을 이용한 접근성\n\n지가\n\n해당지역의 공시지가\n\n\n\n#서울시 지하철 데이터 불러오기\n서울시_지하철_위치_좌표 = pd.read_csv(\"/Users/chojs/Desktop/data_mining_project2/서울교통공사_1_8호선 역사 좌표(위경도) 정보_20211231.csv\",encoding=\"CP949\")\n서울시_지하철_위치_좌표\n\n\n\n\n\n  \n    \n      \n      연번\n      호선\n      고유역번호(외부역코드)\n      역명\n      위도\n      경도\n      작성일자\n    \n  \n  \n    \n      0\n      1\n      1\n      150\n      서울\n      37.553150\n      126.972533\n      1974-02-28\n    \n    \n      1\n      2\n      1\n      151\n      시청\n      37.563590\n      126.975407\n      1974-08-15\n    \n    \n      2\n      3\n      1\n      152\n      종각\n      37.570203\n      126.983116\n      1974-08-15\n    \n    \n      3\n      4\n      1\n      153\n      종로3가\n      37.570429\n      126.992095\n      1974-08-15\n    \n    \n      4\n      5\n      1\n      154\n      종로5가\n      37.570971\n      127.001900\n      1974-03-31\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      271\n      272\n      8\n      2823\n      남한산성입구\n      37.451568\n      127.159845\n      1996-10-31\n    \n    \n      272\n      273\n      8\n      2824\n      단대오거리\n      37.445057\n      127.156735\n      1996-12-28\n    \n    \n      273\n      274\n      8\n      2825\n      신흥\n      37.440952\n      127.147590\n      1996-12-28\n    \n    \n      274\n      275\n      8\n      2826\n      수진\n      37.437575\n      127.140936\n      1996-12-28\n    \n    \n      275\n      276\n      8\n      2827\n      모란\n      37.433888\n      127.129921\n      1996-11-30\n    \n  \n\n276 rows × 7 columns\n\n\n\n\n#서울시 읍면동의 정보 및 행정구역 데이터 불러오기\n서울시_읍면동_행정구역데이터\n\n\n\n\n\n  \n    \n      \n      EMD_CD\n      EMD_NM\n      SGG_OID\n      COL_ADM_SE\n      GID\n      geometry\n    \n  \n  \n    \n      0\n      11110154\n      장사동\n      4315\n      11110\n      3037\n      POLYGON ((955438.037 1952426.894, 955438.325 1...\n    \n    \n      1\n      11110153\n      돈의동\n      4314\n      11110\n      3038\n      POLYGON ((955054.604 1952786.670, 955055.964 1...\n    \n    \n      2\n      11290134\n      길음동\n      4532\n      11290\n      2820\n      POLYGON ((957364.694 1957374.485, 957376.240 1...\n    \n    \n      3\n      11290133\n      정릉동\n      4531\n      11290\n      2821\n      POLYGON ((957598.059 1956308.659, 957583.162 1...\n    \n    \n      4\n      11290132\n      보문동3가\n      4530\n      11290\n      2822\n      POLYGON ((957323.502 1954285.821, 957323.592 1...\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      464\n      11680107\n      신사동\n      1050\n      11680\n      2654\n      MULTIPOLYGON (((957392.555 1947055.361, 957582...\n    \n    \n      465\n      11680106\n      대치동\n      1215\n      11680\n      2655\n      POLYGON ((960137.158 1945122.806, 960275.714 1...\n    \n    \n      466\n      11680105\n      삼성동\n      1184\n      11680\n      2656\n      POLYGON ((959462.166 1946535.406, 959468.699 1...\n    \n    \n      467\n      11260106\n      신내동\n      50\n      11260\n      5312\n      POLYGON ((966169.085 1956671.479, 966095.065 1...\n    \n    \n      468\n      11260105\n      망우동\n      51\n      11260\n      5313\n      POLYGON ((964287.419 1955635.516, 964288.290 1...\n    \n  \n\n469 rows × 6 columns\n\n\n\n\n# 동대문구의 지하철역\n\n# 서울 중심의 지도 생성\n동대문_map = folium.Map(location=[37.5724, 127.0345], zoom_start=13)\n\n서울시_읍면동_행정구역데이터\n\nfolium.GeoJson(서울시_행정구역,\n               tooltip=folium.GeoJsonTooltip(fields=['SGG_NM'])\n               ).add_to(동대문_map)\n\nfolium.GeoJson(서울시_읍면동_행정구역데이터,\n               tooltip=folium.GeoJsonTooltip(fields=['EMD_NM'])\n                ).add_to(동대문_map)\n\ncolors = ['blue', 'green', 'orange', 'lightblue', 'purple', 'beige', 'darkgreen', 'pink'] \n# 색상 지정\ncolor_dict = {\n    1: 'blue',\n    2: 'green',\n    3: 'orange',\n    4: 'lightblue',\n    5:'purple',\n    6:'beige',\n    7:'darkgreen',\n    8:'pink'\n}\n\n# 데이터프레임의 각 행을 순회하면서 마커 생성 및 색상 지정\nfor index, row in 서울시_지하철_위치_좌표.iterrows():\n    lat = row['위도']\n    lon = row['경도']\n    line = row['호선']\n    color = color_dict.get(line, 'gray')  # 호선에 해당하는 색상을 가져오고, 없을 경우 기본 색상인 'gray'를 사용\n    marker = folium.CircleMarker(location=[lat, lon], color=color, fill=True, fill_color=color)\n    marker.add_to(동대문_map)\n\n# 지도 출력\n동대문_map\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n# 강남문구의 지하철역\n\n# 서울 중심의 지도 생성\n강남_map = folium.Map(location=[37.495985, 127.066409], zoom_start=13)\n\n서울시_지하철_위치_좌표\n\nfolium.GeoJson(서울시_행정구역,\n               tooltip=folium.GeoJsonTooltip(fields=['SGG_NM'])\n                ).add_to(강남_map)\n\ncolors = ['blue', 'green', 'orange', 'lightblue', 'purple', 'beige', 'darkgreen', 'pink'] \n# 색상 지정\ncolor_dict = {\n    1: 'blue',\n    2: 'green',\n    3: 'orange',\n    4: 'lightblue',\n    5:'purple',\n    6:'beige',\n    7:'darkgreen',\n    8:'pink'\n}\n\n# 데이터프레임의 각 행을 순회하면서 마커 생성 및 색상 지정\nfor index, row in 서울시_지하철_위치_좌표.iterrows():\n    lat = row['위도']\n    lon = row['경도']\n    line = row['호선']\n    color = color_dict.get(line, 'gray')  # 호선에 해당하는 색상을 가져오고, 없을 경우 기본 색상인 'gray'를 사용\n    marker = folium.CircleMarker(location=[lat, lon], color=color, fill=True, fill_color=color)\n    marker.add_to(강남_map)\n\n# 지도 출력\n강남_map\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n# 영등포구의 지하철역\n\n# 서울 중심의 지도 생성\n영등포_map = folium.Map(location=[37.5206, 126.9139], zoom_start=13)\n\n서울시_지하철_위치_좌표\n\nfolium.GeoJson(서울시_행정구역,\n               tooltip=folium.GeoJsonTooltip(fields=['SGG_NM'])\n                ).add_to(영등포_map)\n\ncolors = ['blue', 'green', 'orange', 'lightblue', 'purple', 'beige', 'darkgreen', 'pink'] \n# 색상 지정\ncolor_dict = {\n    1: 'blue',\n    2: 'green',\n    3: 'orange',\n    4: 'lightblue',\n    5:'purple',\n    6:'beige',\n    7:'darkgreen',\n    8:'pink'\n}\n\n# 데이터프레임의 각 행을 순회하면서 마커 생성 및 색상 지정\nfor index, row in 서울시_지하철_위치_좌표.iterrows():\n    lat = row['위도']\n    lon = row['경도']\n    line = row['호선']\n    color = color_dict.get(line, 'gray')  # 호선에 해당하는 색상을 가져오고, 없을 경우 기본 색상인 'gray'를 사용\n    marker = folium.CircleMarker(location=[lat, lon], color=color, fill=True, fill_color=color)\n    marker.add_to(영등포_map)\n\n# 지도 출력\n영등포_map\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n동대문구 : 신설동 : 신설동역(1,2호선) 용두동 : 용두역(2호선),제기동역(1호선) 제기동 : 제기동역(1호선), 고려대역(6호선) 청량리동 : 청량리역(1호선) 전농동 : 청량리역(1호선) 답십리동 : 답십리역(5호선) 장안동 : 장안동역(5호선)\n강남구 : 압구정동 : 압구정역(3호선) 신사동 : 압구정, 신사역(3호선) 논현동 : 신사역(3호선),논현,학동,강남구청역(7호선) 청담동 : 강남구청, 청담역(7호선) 삼성동 : 삼성역(2호선), 강남구청, 청담역(7호선) 역삼동 : 강남, 역삼, 선릉역(2호선) 대치동 : 삼성역(2호선),도곡, 대치, 학여울(3호선) 도곡동 : 양재, 매봉, 도곡역(3호선) 개포동 : 대청역(3호선) 일원동 : 대청, 일원역(3호선) 수서동 : 수서역(3호선)\n영등포구 : 여의도동 : 여의도, 여의나루역(5호선) 당산동 2가 : 영등포구청역(5호선) 당산동 3가 : 영등포구청역(2,5호선) 당산동 5가 : 당산역(2호선) 당산동 6가 : 당산역(2호선) 양평동 1가 : 양평역(5호선) 양평동 2가 : 양평역(5호선) 양평동 3가 : 양평역(5호선) 영등포동 1가 : 신길역(5호선) 영등포동 5가 : 영등포시장역(5호선) 영등포동 6가 : 영등포시장역(5호선) 영등포동 7가 : 영등포시장역(5호선) 문래동 3가 : 문래역(2호선) 대림동 : 대림역(2, 7호선) 신길동 : 신풍, 보라매역(7호선)\n\n이렇게 각 구별 지하철이 지나가는 동을 알 수 있고 위의 동별 공시지가의 평균을 구해 입지선정 예정\n\n#데이터 편집\n동대문구_행정구역 = 서울시_읍면동_행정구역데이터[서울시_읍면동_행정구역데이터['COL_ADM_SE'] == '11230']\n강남구_행정구역 = 서울시_읍면동_행정구역데이터[서울시_읍면동_행정구역데이터['COL_ADM_SE'] == '11680']\n영등포구_행정구역 = 서울시_읍면동_행정구역데이터[서울시_읍면동_행정구역데이터['COL_ADM_SE'] == '11560']\n동대문_강남_영등포_행정구역 = 동대문구_행정구역.append([강남구_행정구역, 영등포구_행정구역], ignore_index=True)\n공시지가 = {'공시지가(원/㎥)' : [3.568119e+06,3.416856e+06,4.013368e+06,3.835315e+06,3.955629e+06,3.566845e+06,3.757580e+06,3.534084e+06,4.329312e+06,4.358127e+06,\n                       1.676767e+07,5.359631e+06,1.475273e+07,9.312725e+06,2.957602e+06,5.299698e+06,1.928975e+06,2.410088e+06,1.738360e+06,1.498457e+07,1.215576e+07,1.741184e+07,1.345849e+07,1.612344e+07,\n                       4.086000e+05,3.625071e+06,3.552993e+06,6.337035e+05,3.851203e+06,4.695798e+06,5.191544e+06,4.174048e+06,4.153437e+06,5.155501e+06,4.220059e+06,2.882079e+06,4.577645e+06,5.141035e+06,4.613340e+06,4.031965e+06,2.844118e+06,2.891924e+06,4.459253e+06,5.061696e+06,4.787559e+06,5.556057e+06,6.545419e+06,8.053489e+06,1.021216e+07,1.390664e+07,6.656528e+06,5.703752e+06,5.292404e+06,4.837693e+06,1.274824e+07,5.110353e+06,5.600117e+06,3.588765e+06]}\n공시지가_종합 = pd.DataFrame(공시지가)\n동대문_강남_영등포_행정구역['공시지가(원/㎥)'] = 공시지가_종합['공시지가(원/㎥)']\n지하철_지나가는_동 = 동대문_강남_영등포_행정구역.loc[[3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,23,22,33,32,31,44,43,52,51,54,56,47,46,45,37,25,26],:]\n지하철_지나가는_동\n\n/var/folders/jm/p7tw90mn0m9c_dsbyjy_sxq40000gn/T/ipykernel_3342/1542659634.py:5: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  동대문_강남_영등포_행정구역 = 동대문구_행정구역.append([강남구_행정구역, 영등포구_행정구역], ignore_index=True)\n\n\n\n\n\n\n  \n    \n      \n      EMD_CD\n      EMD_NM\n      SGG_OID\n      COL_ADM_SE\n      GID\n      geometry\n      공시지가(원/㎥)\n    \n  \n  \n    \n      3\n      11230107\n      청량리동\n      4489\n      11230\n      2863\n      POLYGON ((960067.768 1954564.967, 960068.214 1...\n      3835315.0\n    \n    \n      4\n      11230106\n      장안동\n      4488\n      11230\n      2864\n      POLYGON ((962496.602 1953596.962, 962496.864 1...\n      3955629.0\n    \n    \n      5\n      11230105\n      답십리동\n      4487\n      11230\n      2865\n      POLYGON ((960729.280 1953022.073, 960729.804 1...\n      3566845.0\n    \n    \n      6\n      11230104\n      전농동\n      4486\n      11230\n      2866\n      POLYGON ((960729.280 1953022.073, 960728.422 1...\n      3757580.0\n    \n    \n      7\n      11230103\n      제기동\n      4485\n      11230\n      2867\n      POLYGON ((959437.842 1954767.759, 959440.291 1...\n      3534084.0\n    \n    \n      8\n      11230102\n      용두동\n      4484\n      11230\n      2868\n      POLYGON ((958185.220 1953567.764, 958190.101 1...\n      4329312.0\n    \n    \n      9\n      11230101\n      신설동\n      4483\n      11230\n      2869\n      POLYGON ((958006.570 1953418.018, 958008.337 1...\n      4358127.0\n    \n    \n      10\n      11680104\n      청담동\n      4695\n      11680\n      2657\n      POLYGON ((959934.756 1948388.974, 959935.285 1...\n      16767670.0\n    \n    \n      11\n      11680103\n      개포동\n      1111\n      11680\n      2658\n      POLYGON ((962767.783 1944323.359, 962786.843 1...\n      5359631.0\n    \n    \n      12\n      11680101\n      역삼동\n      4693\n      11680\n      2659\n      POLYGON ((960137.165 1945122.850, 960156.153 1...\n      14752730.0\n    \n    \n      13\n      11680118\n      도곡동\n      1056\n      11680\n      2646\n      POLYGON ((958593.221 1943470.484, 958616.585 1...\n      9312725.0\n    \n    \n      14\n      11680115\n      수서동\n      1203\n      11680\n      2647\n      POLYGON ((964411.951 1944068.828, 964415.416 1...\n      2957602.0\n    \n    \n      15\n      11680114\n      일원동\n      1204\n      11680\n      2648\n      POLYGON ((964411.951 1944068.828, 964390.680 1...\n      5299698.0\n    \n    \n      19\n      11680110\n      압구정동\n      1049\n      11680\n      2652\n      POLYGON ((957027.864 1947810.500, 956989.636 1...\n      14984570.0\n    \n    \n      20\n      11680108\n      논현동\n      1183\n      11680\n      2653\n      POLYGON ((959686.454 1945763.984, 959679.043 1...\n      12155760.0\n    \n    \n      21\n      11680107\n      신사동\n      1050\n      11680\n      2654\n      MULTIPOLYGON (((957392.555 1947055.361, 957582...\n      17411840.0\n    \n    \n      23\n      11680105\n      삼성동\n      1184\n      11680\n      2656\n      POLYGON ((959462.166 1946535.406, 959468.699 1...\n      16123440.0\n    \n    \n      22\n      11680106\n      대치동\n      1215\n      11680\n      2655\n      POLYGON ((960137.158 1945122.806, 960275.714 1...\n      13458490.0\n    \n    \n      33\n      11560125\n      양평동1가\n      4661\n      11560\n      2691\n      POLYGON ((946242.023 1947007.458, 946241.074 1...\n      5155501.0\n    \n    \n      32\n      11560126\n      양평동2가\n      4662\n      11560\n      2690\n      POLYGON ((945655.273 1946988.325, 945654.791 1...\n      4153437.0\n    \n    \n      31\n      11560127\n      양평동3가\n      4663\n      11560\n      2689\n      POLYGON ((945481.594 1947600.461, 945487.647 1...\n      4174048.0\n    \n    \n      44\n      11560114\n      당산동4가\n      4650\n      11560\n      2702\n      POLYGON ((947231.269 1947575.041, 947230.965 1...\n      4787559.0\n    \n    \n      43\n      11560115\n      당산동5가\n      4651\n      11560\n      2701\n      POLYGON ((946908.499 1948613.002, 946920.159 1...\n      5061696.0\n    \n    \n      52\n      11560112\n      당산동2가\n      4648\n      11560\n      2704\n      POLYGON ((946602.301 1947125.631, 946602.093 1...\n      5292404.0\n    \n    \n      51\n      11560113\n      당산동3가\n      34\n      11560\n      2703\n      POLYGON ((947224.641 1947574.017, 947214.736 1...\n      5703752.0\n    \n    \n      54\n      11560110\n      여의도동\n      4646\n      11560\n      2706\n      POLYGON ((948901.667 1949279.710, 948920.971 1...\n      12748240.0\n    \n    \n      56\n      11560102\n      영등포동1가\n      4638\n      11560\n      2714\n      POLYGON ((948160.232 1946750.008, 948160.750 1...\n      5600117.0\n    \n    \n      47\n      11560106\n      영등포동5가\n      4642\n      11560\n      2710\n      POLYGON ((947702.933 1946912.967, 947702.097 1...\n      8053489.0\n    \n    \n      46\n      11560107\n      영등포동6가\n      4643\n      11560\n      2709\n      POLYGON ((947411.297 1946982.363, 947409.421 1...\n      6545419.0\n    \n    \n      45\n      11560108\n      영등포동7가\n      4644\n      11560\n      2708\n      POLYGON ((947963.123 1947606.181, 947977.840 1...\n      5556057.0\n    \n    \n      37\n      11560121\n      문래동3가\n      4657\n      11560\n      2695\n      POLYGON ((946787.686 1946182.082, 946730.058 1...\n      5141035.0\n    \n    \n      25\n      11560133\n      대림동\n      4669\n      11560\n      2683\n      POLYGON ((946692.526 1945328.738, 946692.865 1...\n      3625071.0\n    \n    \n      26\n      11560132\n      신길동\n      4668\n      11560\n      2684\n      POLYGON ((948588.845 1946726.963, 948633.641 1...\n      3552993.0\n    \n  \n\n\n\n\n\n#지하철이 지나가는 각 동들의 공시지가\n지하철_동_공시지가_지도 = folium.Map(location=[37.5665, 126.9780], \n                 zoom_start=11, control_scale=True)\n\n\ndef field_type_colour(feature):\n    population = feature['properties']['공시지가(원/㎥)']\n    max_population = max(지하철_지나가는_동['공시지가(원/㎥)'])\n    min_population = min(지하철_지나가는_동['공시지가(원/㎥)'])\n    brightness = int((max_population-population) / (max_population - min_population) * 255)\n    color = (brightness,0,0)  # 색상 값 (빨강 채널)\n    return '#{:02x}{:02x}{:02x}'.format(*color)\n\n\n\n\nfolium.GeoJson(지하철_지나가는_동,\n               tooltip=folium.GeoJsonTooltip(fields=['EMD_NM','공시지가(원/㎥)']),\n                style_function= lambda feature: {'fillColor':field_type_colour(feature), \n                                                 'fillOpacity':0.9, 'color': 'white','weight':1}).add_to(지하철_동_공시지가_지도)\n\n\n지하철_동_공시지가_지도\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n# 서울 중심의 지도 생성\nm = folium.Map(location=[37.5665, 126.9780], \n                 zoom_start=11, control_scale=True)\n\n\ndef field_type_colour(feature):\n    population = feature['properties']['공시지가(원/㎥)']\n    max_population = max(동대문_강남_영등포_행정구역['공시지가(원/㎥)'])\n    min_population = min(동대문_강남_영등포_행정구역['공시지가(원/㎥)'])\n    brightness = int((max_population-population) / (max_population - min_population) * 255)\n    color = (brightness,0,0)  # 색상 값 (빨강 채널)\n    return '#{:02x}{:02x}{:02x}'.format(*color)\n\n\n\n\nfolium.GeoJson(동대문_강남_영등포_행정구역,\n               tooltip=folium.GeoJsonTooltip(fields=['EMD_NM','공시지가(원/㎥)']),\n                style_function= lambda feature: {'fillColor':field_type_colour(feature), \n                                                 'fillOpacity':0.9, 'color': 'white','weight':1}).add_to(m)\n\n\n\n\ncolors = ['blue', 'green', 'orange', 'lightblue', 'purple', 'beige', 'darkgreen', 'pink'] \n# 색상 지정\ncolor_dict = {\n    1: 'blue',\n    2: 'green',\n    3: 'orange',\n    4: 'lightblue',\n    5:'purple',\n    6:'beige',\n    7:'darkgreen',\n    8:'pink'\n}\n\n# 데이터프레임의 각 행을 순회하면서 마커 생성 및 색상 지정\nfor index, row in 서울시_지하철_위치_좌표.iterrows():\n    lat = row['위도']\n    lon = row['경도']\n    line = row['호선']\n    color = color_dict.get(line, 'gray')  # 호선에 해당하는 색상을 가져오고, 없을 경우 기본 색상인 'gray'를 사용\n    marker = folium.CircleMarker(location=[lat, lon], color=color, fill=True, fill_color=color)\n    marker.add_to(m)\n\ncolor_dict = {\n    1: 'blue',\n    2: 'green',\n    3: 'orange',\n    4: 'lightblue',\n    5:'purple',\n    6:'beige',\n    7:'darkgreen',\n    8:'pink'\n}\n\n\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n동대문구 : 제기동 : 3,534,084 답십리동 : 3,566,845 전농동 : 3,757,580 청량리동 : 3,835,315 장안동 : 3,955,629 용두동 : 4,329,312 신설동 : 4,358,127\n강남구 : 수서동 : 2,957,602 일원동 : 5,299,698 개포동 : 5,359,631 도곡동 : 9,312,725 논현동 : 12,155,760 대치동 : 13,458,490 역삼동 : 14,752,730 압구정동 : 14,984,570 삼성동 : 16,123,440 청담동 : 16,767,670 신사동 : 17,411,840\n영등포구 : 신길동 : 3,552,993 대림동 : 3,625,071 양평동 2가 : 4,153,437 양평동 3가 : 4,174,048 당산동 6가 : 4,459,253 당산동 5가 : 5,061,696 문래동 3가 : 5,141,035 양평동 1가 : 5,155,501 당산동 2가 : 5,292,404 영등포동 7가 : 5,556,057 영등포동 1가 : 5,600,117 당산동 3가 : 5,703,752 영등포동 6가 : 6,545,419 영등포동 5가 : 8,053,489 여의도동 : 12,748,240\n\n단위 : 원/㎡\n이렇게 동대문구에서의 Top3는 제기동, 답십리동, 전농동 강남구에서는 수서동, 일원동, 개포동 영등포구에서는 신길동, 대림동, 양평동 2가인것을 알 수 있습니다\n\n# 지도 생성\nm = folium.Map(location=[37.5665, 126.9780], zoom_start=11, control_scale=True)\n\n# 스타일 함수 정의\ndef style_function(feature):\n    # 특정 지역의 이름으로 색상을 구분하여 스타일을 지정\n    if feature['properties']['EMD_NM'] in ['답십리동','전농동','제기동','개포동','수서동','일원동','대림동','신길동','양평동2가']:\n        return {\n            'fillColor': 'blue',  # 채우는 색상\n            'color': 'blue',  # 테두리 색상\n            'weight': 1,  # 테두리 두께\n            'fillOpacity': 0.7,  # 채우는 영역의 투명도\n        }\n    else:\n        return {\n            'fillColor': 'gray',  # 채우는 색상\n            'color': 'gray',  # 테두리 색상\n            'weight': 1,  # 테두리 두께\n            'fillOpacity': 0.3,  # 채우는 영역의 투명도\n        }\n\n# GeoJson 레이어 추가\nfolium.GeoJson(\n    동대문_강남_영등포_행정구역,\n    tooltip=folium.GeoJsonTooltip(fields=['EMD_NM', '공시지가(원/㎥)']),\n    style_function=style_function\n).add_to(m)\n\n# 지도 출력\nm  # Jupyter Notebook 등에서 지도를 출력\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jung_coding",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJun 18, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJun 15, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\n“Datamining Final Exam project”\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJun 12, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]